import streamlit as st
import pandas as pd
import io

def process_files():
    st.markdown("### üî¢ Selecione o n√∫mero de cota√ß√µes recebidas")
    qtd = st.selectbox("Quantas cota√ß√µes voc√™ recebeu?", [1, 2, 3, 4, 5])

    if "avancar" not in st.session_state:
        st.session_state.avancar = False

    if not st.session_state.avancar:
        if st.button("Avan√ßar para envio das cota√ß√µes"):
            st.session_state.avancar = True
        return

    uploads = []
    st.markdown("### üì§ Upload dos Arquivos de Cota√ß√£o")

    for i in range(qtd):
        col1, col2 = st.columns([1.5, 3])
        with col1:
            empresa = st.text_input(f"Nome da empresa {i+1}", key=f"empresa_{i}")
        with col2:
            file = st.file_uploader(f"Planilha da {empresa or f'Empresa {i+1}'}", type=["xlsx"], key=f"file_{i}")
        if file and empresa:
            uploads.append((empresa, file))

    if len(uploads) < qtd:
        st.info("Preencha todos os nomes e envie todos os arquivos para continuar.")
        return

    try:
        comparador = pd.DataFrame()

        for empresa, arquivo in uploads:
            df = pd.read_excel(arquivo, header=7, usecols=[1, 2, 3, 4])
            df.columns = ["Quantidade", "Pe√ßa", "Pre√ßo", "Marca"]

            df["Pre√ßo"] = (
                df["Pre√ßo"]
                .astype(str)
                .str.replace("R\\$", "", regex=True)
                .str.replace(",", ".", regex=False)
                .str.strip()
            )
            df["Pre√ßo"] = pd.to_numeric(df["Pre√ßo"], errors="coerce")
            df["Pe√ßa"] = df["Pe√ßa"].astype(str).str.strip()
            df["Marca"] = df["Marca"].astype(str).str.strip()

            df = df[df["Pe√ßa"].notna() & (df["Pre√ßo"] > 0)]
            df["Empresa"] = empresa
            comparador = pd.concat([comparador, df], ignore_index=True)

        melhores = comparador.sort_values("Pre√ßo").groupby("Pe√ßa").first().reset_index()

        st.markdown("### ‚úÖ Resultado com os Melhores Pre√ßos")
        st.dataframe(melhores[["Pe√ßa", "Empresa", "Pre√ßo", "Marca"]], use_container_width=True)

        towrite = io.BytesIO()
        melhores.to_excel(towrite, index=False, sheet_name="Melhores Pre√ßos")
        towrite.seek(0)
        st.download_button(
            "üì• Exportar Resultado para Excel",
            data=towrite,
            file_name="melhores_precos.xlsx",
            mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
        )
    except Exception as e:
        st.error(f"Erro no processamento: {e}")